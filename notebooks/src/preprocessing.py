# -*- coding: utf-8 -*-
"""preprocessing

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ClWT_sSRiH6PVm0ktcw_qxyjEP5q09vZ
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler

def preprocess(df):

  train = df[:70000]
  test = df[70000:]

  train = train.loc[train['session_position'] <= 15]
  train_features = train.drop(['skipped', 'session_id'], axis=1)
  train_labels = train['skipped']

  test = test.loc[test['session_position'] <= 15]
  test_features = test.drop(['skipped', 'session_id'], axis=1)
  test_labels = test['skipped']


  scaler = StandardScaler()

  train_scaled = scaler.fit_transform(train_features)
  test_scaled = scaler.transform(test_features)

  train_features = np.array(train_scaled)
  test_features = np.array(test_scaled)
  train_labels = np.array(train_labels)
  test_labels = np.array(test_labels)

  train_features = train_features.reshape((int(train_features.shape[0]/15), 15, train_features.shape[1]))
  test_features = test_features.reshape((int(test_features.shape[0]/15), 15, test_features.shape[1]))
  train_labels = train_labels.reshape((int(train_labels.shape[0]/15), 15, 1))
  test_labels = test_labels.reshape((int(test_labels.shape[0]/15), 15, 1))

  return train_features, test_features, train_labels, test_labels